definitions:
  EthereumConfigResponse:
    type: 'object'
    required:
      - 'network'
      - 'rpcUrl'
      - 'connection'
      - 'timestamp'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      rpcUrl:
        type: 'string'
        example: 'https://mainnet.infura.io/v3/'
      connection:
        type: 'boolean'
        example: true
      timestamp:
        type: 'integer'
        example: 1636368085740

  NonceRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'

  NonceResponse:
    type: 'object'
    required:
      - 'nonce'
    properties:
      privateKey:
        type: 'integer'
        example: 123

  AllowancesRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'spender'
      - 'tokenSymbols'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      spender:
        type: 'string'
        example: 'uniswap'
      tokenSymbols:
        type: 'array'
        items: 'string'
        example: [ 'WETH', 'DAI' ]
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'

  AllowancesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'spender'
      - 'approvals'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      spender:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      approvals:
        type: 'object'
        properties:
          id:
            type: 'string'
          name:
            type: 'string'
        example: '{"WETH": "100","DAI": "300"}'

  BalancesRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'tokenSymbols'
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      tokenSymbols:
        type: 'array'
        items: 'string'
        example: [ 'WETH', 'DAI' ]
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'dexalot'

  BalancesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'balances'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      balances:
        type: 'object'
        properties:
          id:
            type: 'string'
          name:
            type: 'string'
        example: '{"ETH": "1.5", "WETH": "100","DAI": "300"}'

  ApproveRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'spender'
      - 'token'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      spender:
        type: 'string'
        example: 'uniswap'
      token:
        type: 'string'
        example: 'WETH'
      amount:
        type: 'string'
        example: '0'
      nonce:
        type: 'number'
        example: 123
      maxFeePerGas:
        type: 'string'
        example: '5000000000'
      maxPriorityFeePerGas:
        type: 'string'
        example: '5000000000'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'

  ApproveResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'tokenAddress'
      - 'spender'
      - 'amount'
      - 'nonce'
      - 'approval'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1.526
      tokenAddress:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      spender:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      amount:
        type: 'string'
        example: '100'
      nonce:
        type: 'number'
        example: 124
      approval:
        type: 'object'
        example: '{"type": 2,"chainId": 42,"nonce": 129,"maxPriorityFeePerGas": "94000000000","maxFeePerGas": "94000000000","gasPrice": null,"gasLimit": "100000","to": "0xd0A1E359811322d97991E03f863a0C30C2cF029C","value": "0","data": "0x095ea7b30000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","accessList": [],"hash": "0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d","v": 1,"r": "0x47c517271885b7041d81bcd65cd050a5d6be3fbd67a8f1660ac8d7e68fc8221f","s": "0x7c62e114b2cb0eae6236b597fb4aacb01c51e56afd7f734e6039d83aa400ba82","from": "0xFaA12FD102FE8623C9299c72B03E45107F2772B5","confirmations": 0}'  # noqa: documentation

  PollRequest:
    type: 'object'
    required:
      - 'txHash'
      - 'chain'
      - 'network'
    properties:
      txHash:
        type: 'string'
        example: '0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d'  # noqa: documentation
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'

  PollResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'currentBlock'
      - 'txHash'
      - 'txStatus'
      - 'txBlock'
      - 'txData'
      - 'txReceipt'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      currentBlock:
        type: 'integer'
        example: 28243911
      txHash:
        type: 'string'
        example: '0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d'  # noqa: documentation
      txStatus:
        type: 'number'
        example: 1
      txBlock:
        type: 'number'
        example: 28243800
      txData:
        type: 'object'
      txReceipt:
        type: 'object'

  UniswapConfigResponse:
    type: 'object'
    required:
      - 'network'
      - 'uniswap_router'
      - 'connection'
      - 'timestamp'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      uniswap_router:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      connection:
        type: 'boolean'
        example: true
      timestamp:
        type: 'integer'
        example: 1636368085740

  PriceRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'amount'
      - 'side'
      - 'chain'
      - 'network'
    properties:
      quote:
        type: 'string'
        example: 'WETH'
      base:
        type: 'string'
        example: 'DAI'
      amount:
        type: 'string'
        example: '10'
      side:
        type: 'string'
        example: 'BUY'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'

  PriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'amount'
      - 'expectedAmount'
      - 'price'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa'
      quote:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      amount:
        type: 'string'
        example: '10'
      expectedAmount:
        type: 'string'
        example: '0.000000000000000001'
      price:
        type: 'string'
      gasPrice:
        type: 'number'
        example: 96
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'number'
        example: 150688
      gasCost:
        type: 'string'
        example: '0.014466048000000000'

  TradeRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'amount'
      - 'side'
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      quote:
        type: 'string'
        example: 'WETH'
      base:
        type: 'string'
        example: 'DAI'
      amount:
        type: 'string'
        example: '10'
      side:
        type: 'string'
        example: 'BUY'
      limitPrice:
        type: 'string'
      nonce:
        type: number
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswap'

  TradeResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'amount'
      - 'price'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa'
      quote:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      amount:
        type: 'string'
        example: '10'
      expectedIn:
        type: 'string'
      expectedOut:
        type: 'string'
      price:
        type: 'string'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'

  CancelRequest:
    type: 'object'
    required:
      - 'nonce'
      - 'address'
      - 'chain'
      - 'network'
    properties:
      nonce:
        type: 'integer'
        example: 123
      address:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
  
  CancelResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d'  # noqa: documentation

  AddWalletRequest:
    type: 'object'
    required:
      - 'chainName'
      - 'privateKey'
    properties:
      chainName:
        type: 'string'
        example: 'ethereum'
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
  
  RemoveWalletRequest:
    type: 'object'
    required:
      - 'chainName'
      - 'address'
    properties:
      chainName:
        type: 'string'
        example: 'ethereum'
      address:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'

  GetWalletResponse:
    type: 'object'
    required:
      - 'chain'
      - 'walletAddresses'
    properties:
      chain:
        type: 'string'
      walletAddresses:
        type: 'array'
        items: 'string'
        example: [ '0xd0A1E359811322d97991E03f863a0C30C2cF029C', '0xd0A1E359811322d97991E03f863a0C30C2XXXXXX' ]

  GetWalletSignRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'address'
      - 'message'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      address:
        type: 'string'
        example: '0x...'
      message:
        type: 'string'
        example: 'Message to be signed'

  GetWalletSignResponse:
    type: 'object'
    required:
      - 'signature'
    properties:
      signature:
        type: 'string'
        example: '0xb234d423b065317fdbb30408c5b83ac3f1c6a273b5b4f65faac2d70ec412e2762099917c62f21924aee59cab277e9ba001147dd5b300fcf4cafb6e79a97c756d1c'

  ConfigUpdateRequest:
    type: 'object'
    required:
      - 'configPath'
      - 'configValue'
    properties:
      configPath:
        type: 'string'
      configValue:
        OneOf:
          - type: 'boolean'
          - type: 'number'

  TokensResponse:
    type: 'object'
    required:
      - 'tokens'
    properties:
      tokens:
        type: 'object'
        example: '{
          tokens: [
            {
              "address": "0x006BeA43Baa3f7A6f765F14f10A1a1b08334EF45",
              "chainId": "1",
              "name": "Stox",
              "symbol": "STX",
              "decimals": "18",
              "logoURI": "https://tokens.1inch.io/0x006bea43baa3f7a6f765f14f10a1a1b08334ef45.png"
            },
            {
              "address": "0x0327112423F3A68efdF1fcF402F6c5CB9f7C33fd",
              "chainId": "1",
              "name": "PieDAOBTC",
              "symbol": "BTC",
              "decimals": "18",
              "logoURI": "https://tokens.1inch.io/0x0327112423f3a68efdf1fcf402f6c5cb9f7c33fd.png"
            }
          ]}'

  NetworkSelectionRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswap'

  EstimateGasResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      gasPrice:
        type: 'number'
        example: 96
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'number'
        example: 150688
      gasCost:
        type: 'string'
        example: '0.014466048000000000'

  LiquidityAddRequest:
    type: 'object'
    required:
      - 'address'
      - 'token0'
      - 'token1'
      - 'amount0'
      - 'amount1'
      - 'fee'
      - 'lowerPrice'
      - 'upperPrice'
    properties:
      address:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      amount0:
        type: 'string'
        example: '10'
      amount1:
        type: 'string'
        example: '10'
      lowerPrice:
        type: 'number'
        example: 1
      upperPrice:
        type: number
        example: 5
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityAddResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'token0'
      - 'token1'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'goerli'
      timestamp:
        type: 'integer'
        example: 1636368085740
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
        example: '0x0000000000000000000000000000000000000000'

  LiquidityRemoveRequest:
    type: 'object'
    required:
      - 'address'
      - 'tokenId'
    properties:
      address:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      tokenId:
        type: 'number'
        example: 12
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityRemoveResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'tokenId'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'goerli'
      timestamp:
        type: 'integer'
        example: 1636368085740
      tokenId:
        type: 'number'
        example: 12
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
        example: '0x0000000000000000000000000000000000000000'

  LiquidityCollectRequest:
    type: 'object'
    required:
      - 'address'
      - 'tokenId'
    properties:
      address:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      tokenId:
        type: 'number'
        example: 12
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityCollectResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'tokenId'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'goerli'
      timestamp:
        type: 'integer'
        example: 1636368085740
      tokenId:
        type: 'number'
        example: 12
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
        example: '0x0000000000000000000000000000000000000000'

  LiquidityPositionRequest:
    type: 'object'
    required:
      - 'tokenId'
    properties:
      tokenId:
        type: 'number'
        example: 12
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityPositionResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'tokenId'
      - 'token0'
      - 'token1'
      - 'fee'
      - 'lowerPrice'
      - 'upperPrice'
      - 'amount0'
      - 'amount1'
      - 'unclaimedToken0'
      - 'unclaimedToken1'
    properties:
      network:
        type: 'string'
        example: 'goerli'
      timestamp:
        type: 'integer'
        example: 1636368085740
      tokenId:
        type: 'number'
        example: 12
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      fee:
        type: 'string'
        example: 'LOW'
      lowerPrice:
        type: 'string'
        example: '1'
      upperPrice:
        type: 'string'
        example: '5'
      amount0:
        type: 'string'
        example: '1'
      amount1:
        type: 'string'
        example: '1'
      unclaimedToken0:
        type: 'string'
        example: '2'
      unclaimedToken1:
        type: 'string'
        example: '2'

  LiquidityPriceRequest:
    type: 'object'
    required:
      - 'token0'
      - 'token1'
      - 'fee'
      - 'period'
      - 'interval'
    properties:
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      fee:
        type: 'string'
        example: 'LOW'
      period:
        type: 'number'
        example: 60
      interval:
        type: 'number'
        example: 5
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'goerli'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityPriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'token0'
      - 'token1'
      - 'fee'
      - 'period'
      - 'interval'
    properties:
      network:
        type: 'string'
        example: 'goerli'
      timestamp:
        type: 'integer'
        example: 1636368085740
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      fee:
        type: 'string'
        example: 'LOW'
      period:
        type: 'number'
        example: 60
      interval:
        type: 'number'
        example: 5
      prices:
        type: 'object'
        example: [ '1', '2', '3' ]


  PerpPairsRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'

  PerpPairsResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'pairs'
    properties:
      network:
        type: 'string'
        example: 'optimism'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      pairs:
        type: 'array'
        items: 'string'
        example: [ 'AAVEUSD', 'PERPUSD', 'BTCUSD' ]

  PerpPriceRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'base'
      - 'quote'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'

  PerpPriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'markPrice'
      - 'indexPrice'
      - 'indexTwapPrice'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      markPrice:
        type: 'string'
        example: '0.1'
      indexPrice:
        type: 'string'
        example: '0.2'
      indexTwapPrice:
        type: 'string'
        example: '0.3'

  PerpStatusResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'isActive'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      isActive:
        type: 'boolean'
        example: 'true'

  PerpPositionRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'base'
      - 'quote'
      - 'address'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      address:
        type: 'string'
        example: '0x...'

  PerpPositionResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'positionAmt'
      - 'positionSide'
      - 'unrealizedProfit'
      - 'leverage'
      - 'entryPrice'
      - 'tickerSymbol'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      positionAmt:
        type: 'string'
        example: '0.1'
      positionSide:
        type: 'string'
        example: 'LONG'
      unrealizedProfit:
        type: 'string'
        example: '0.3'
      leverage:
        type: 'string'
        example: '1'
      entryPrice:
        type: 'string'
        example: '100.3'
      tickerSymbol:
        type: 'string'
        example: 'AAVEUSD'

  PerpBalanceRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      address:
        type: 'string'
        example: '0x...'

  PerpBalanceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'balance'

    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      balance:
        type: 'string'
        example: '100'

  PerpOpenRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'amount'
      - 'side'
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      quote:
        type: 'string'
        example: 'AAVE'
      base:
        type: 'string'
        example: 'USD'
      amount:
        type: 'string'
        example: '10'
      side:
        type: 'string'
        example: 'LONG'
      nonce:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      address:
        type: 'string'
        example: '0x...'

  PerpOpenResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'amount'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      amount:
        type: 'string'
        example: '10'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
  
  PerpCloseRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      quote:
        type: 'string'
        example: 'AAVE'
      base:
        type: 'string'
        example: 'USD'
      nonce:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      address:
        type: 'string'
        example: '0x...'

  PerpCloseResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: 'AAVE'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'

  ClobMarketsRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      market:
        type: 'string'
        example: 'AAVE-USDT'
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'

  ClobMarketResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'markets'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      markets:
        type: 'object'
        example: '[{market info}, ...]'
        
  ClobTickerRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      market:
        type: 'string'
        example: 'AVAX-USDC'
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'

  ClobTickerResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'markets'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      markets:
        type: 'object'
        example: '[{market info}, ...]'

  ClobOrderbookRequest:
    type: 'object'
    required:
      - 'market'
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      market:
        type: 'string'
        example: 'AVAX-USDC'
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      isDerivative:
        type: 'boolean'
        example: false

  ClobOrderbookResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'orderbook'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      orderbook:
        type: 'object'
        example: '{bids: [[price, amount]...], asks: [[price, amount]...]}'

  ClobGetOrderRequest:
    type: 'object'
    required:
      - 'market'
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      market:
        type: 'string'
        example: 'AVAX-USDC'
      orderId:
        type: 'string'
        example: 'Buy-21342453'
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      address:
        type: 'string'
        example: '0x...'

  ClobGetOrderResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'orderbook'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      orders:
        type: 'object'
        example: '[{order info}, ...]'

  ClobPostOrderRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'market'
      - 'side'
      - 'orderType'
      - 'price'
      - 'amount'
      - 'address'
    properties:
      market:
        type: 'string'
        example: 'AVAX-USDC'
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      address:
        type: 'string'
        example: '0x...'
      side:
        type: 'string'
        example: 'BUY'
      orderType:
        type: 'string'
        example: 'LIMIT_MAKER'
      price:
        type: 'string'
        example: '102'
      amount:
        type: 'string'
        example: '1'

  ClobPostOrderResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'txHash'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0x...'

  ClobDeleteOrderRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
      - 'market'
      - 'orderId'
    properties:
      market:
        type: 'string'
        example: 'AVAX-USDT'
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      address:
        type: 'string'
        example: '0x...'
      orderId:
        type: 'string'
        example: '0x...'

  ClobDeleteOrderResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'txHash'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0x...'

  PerpClobFundingRatesRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'marketId'
    properties:
      marketId:
        type: 'string'
        example: '0xa508cb32923323679f29a032c70342c147c17d0145625922b0ef22e955c844c0'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      skip:
        type: 'number'
        example: 0
      limit:
        type: 'number'
        example: 10
      endTime:
        type: 'number'
        example: 1678122531

  PerpClobFundingRatesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'fundingRates'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0x...'
      fundingRates:
        type: 'array'
        example: []

  PerpClobFundingPaymentsRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'marketId'
      - 'address'
    properties:
      marketId:
        type: 'string'
        example: '0xa508cb32923323679f29a032c70342c147c17d0145625922b0ef22e955c844c0'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      address:
        type: 'string'
        example: '0x261362dBC1D83705AB03e99792355689A4589b8E000000000000000000000000'
      skip:
        type: 'number'
        example: 0
      limit:
        type: 'number'
        example: 10
      endTime:
        type: 'number'
        example: 1678122531

  PerpClobFundingPaymentsResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'fundingPayments'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0x...'
      fundingPayments:
        type: 'array'
        example: []

  PerpClobPositionsRequest:
    type: 'object'
    required:
      - 'markets'
      - 'address'
    properties:
      markets:
        type: 'array'
        example: ['INJ-USDC','INJ-WETH']
      address:
        type: 'string'
        example: '0x...'

  PerpClobPositionsResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'positions'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0x...'
      positions:
        type: 'array'
        example: []
        
  TransferRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'from'
      - 'to'
      - 'subaccountId'
      - 'amount'
      - 'token'
    properties:
      chain:
        type: 'string'
        example: 'dexalot'
      network:
        type: 'string'
        example: 'mainnet'
      from:
        type: 'string'
        example: '0x...'
      to:
        type: 'string'
        example: '0x...'
      amount:
        type: 'string'
        example: '10'
      token:
        type: 'string'
        example: 'inj'

  PerpClobPostOrderRequest:
    type: 'object'
    required:
      - 'market'
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
      - 'leverage'
    properties:
      market:
        type: 'string'
        example: 'AAVE-USDT'
      orderId:
        type: 'string'
        example: 'Buy-21342453'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      address:
        type: 'string'
        example: '0x...'
      leverage:
        type: 'number'
        example: 20.0

  PerpClobGetOrderTradesRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
      - 'orderId'
    properties:
      orderId:
        type: 'string'
        example: 'Buy-21342453'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      address:
        type: 'string'
        example: '0x...'

  PerpClobGetOrderTradesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'trades'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      trades:
        type: 'array'
        example: [{}]

  PerpClobFundingInfoRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'market'
    properties:
      market:
        type: 'string'
        example: 'INJ-USDT'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'

  PerpClobFundingInfoResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'fundingInfo'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      fundingInfo:
        type: 'object'
        example: {marketId: '12345',
                  indexPrice: '1.234',
                  markPrice: '1.111',
                  fundingRate: '0.123',
                  nextFundingTimestamp: 123456789}

  PerpClobLastTradePriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'lastTradePrice'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      lastTradePrice:
        type: 'string'
        example: '1.234'

  ClobBatchOrdersRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
      - 'createOrderParams'
      - 'cancelOrderIds'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'mainnet'
      connector:
        type: 'string'
        example: 'dexalot'
      address:
        type: 'string'
        example: '0x...'
      createOrderParams:
        type: 'array'
        items: 'object'
        example: [ {
          market: 'AAVE-USDT',
          price: '2',
          amount: '0.10',
          side: 'SELL',
          orderType: 'LIMIT',
        },
          {
            price: '3',
            amount: '0.10',
            side: 'SELL',
          } ]
      cancelOrderParams:
        type: 'array'
        items: 'object'
        example: [
          { market: 'AAVE-USDT', orderId: '0x...' },
          { market: 'AAVE-USDT', orderId: '0x...' },
        ]

  ClobBatchOrdersResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'txHash'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0x...'